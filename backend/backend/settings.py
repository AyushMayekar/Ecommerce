"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4765g=n!m9dnz^^w8g5of*9g211e12=&u9iqgw+@8)k&1f88qc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [ "eaglehub.onrender.com",
    "https://eaglehub.in",]

# ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    "rest_framework", 
    'rest_framework_simplejwt',
    'csp',
    'multiple_product_page.apps.MultipleProductPageConfig',
    'coldstart.apps.ColdstartConfig',
    'single_product_api.apps.SingleProductApiConfig',
    'user_order_management.apps.UserOrderManagementConfig',
    'admin_order_management.apps.AdminOrderManagementConfig',
    'google_oauth.apps.GoogleOauthConfig',
    'payment_gateway.apps.PaymentGatewayConfig',
    'profile_setup.apps.ProfileSetupConfig',
    'admin_operations.apps.AdminOperationsConfig',
    'forgot_password.apps.ForgotPasswordConfig',
    'user_auth.apps.UserAuthConfig',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'csp.middleware.CSPMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom settings

# Load environment variables
MONGODB_URL = os.getenv('MongoDB')
JWT_SECRET_KEY = os.getenv('JWT_SECRET_KEY')

# Cloudinary settings
CLOUDINARY_URL = os.getenv('CLOUDINARY_URL')
CLOUD_NAME = os.getenv('CLOUD_NAME')
CLOUDINARY_API_KEY = os.getenv('CLOUDINARY_API_KEY')
CLOUDINARY_API_SECRET = os.getenv('CLOUDINARY_API_SECRET')

# Razorpay settings
TEST_KEY_SECRET = os.getenv('TEST_KEY_SECRET')
TEST_KEY_ID = os.getenv('TEST_KEY_ID')

# CORS settings
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "https://eaglehub.onrender.com",
    "https://eaglehub.in",
    # 'http://localhost:5173',  # TESTING URL
]

# CSRF settings
CSRF_TRUSTED_ORIGINS = ['https://eaglehub.in', 'https://eaglehub.onrender.com']
CSRF_COOKIE_HTTPONLY = False
CSRF_COOKIE_SAMESITE = 'None'
CSRF_COOKIE_SECURE = True

# SENDGRID Settings
SENDGRID_API_KEY = os.getenv('SENDGRID_API_KEY')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')
FRONTEND_RESET_PASSWORD_URL = "https://eaglehub.onrender.com/reset_password"  # your Vite reset password page
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'apikey'  # literal string 'apikey'
EMAIL_HOST_PASSWORD = SENDGRID_API_KEY

# CRON settings
CRON_SECRET_TOKEN = os.getenv('CRON_SECRET_TOKEN')

# Resend Email Verification Settings
RESEND_API_KEY = os.getenv('RESEND_API_KEY')
SENDER_EMAIL = os.getenv('SENDER_EMAIL')
FRONTEND_BASE_URL = 'https://eaglehub.in'
# FRONTEND_BASE_URL = 'http://localhost:5173' # TESTING URL

# FIREBASE SETTINGS
FIREBASE_API_KEY = os.getenv('FIREBASE_API_KEY')
PROJECT_ID = os.getenv('PROJECT_ID')
AUTH_DOMAIN = os.getenv('AUTH_DOMAIN')
MESSAGING_SENDER_ID = os.getenv('MESSAGING_SENDER_ID')
STORAGE_BUCKET = os.getenv('STORAGE_BUCKET')
APP_ID = os.getenv('APP_ID')
MEASUREMENT_ID = os.getenv('MEASUREMENT_ID')

# CSP settings for Firebase
CONTENT_SECURITY_POLICY = {
    "DIRECTIVES": {
        "default-src": ("'self'",),
        "script-src": (
            "'self'",
            "'unsafe-inline'",
            "https://www.gstatic.com",
            "https://www.google.com",
            "https://www.recaptcha.net",
            "https://www.googleapis.com",
        ),
        "style-src": (
            "'self'",
            "'unsafe-inline'",
            "https://fonts.googleapis.com",
        ),
        "img-src": (
            "'self'",
            "https://www.gstatic.com",
            "https://www.google.com",
            "data:",
        ),
        "font-src": (
            "'self'",
            "https://fonts.gstatic.com",
        ),
        "connect-src": (
            "'self'",
            "https://www.googleapis.com",
            "https://identitytoolkit.googleapis.com",
            "https://firebase.googleapis.com",
        ),
        "frame-src": (
            "'self'",
            "https://www.google.com",
            "https://www.recaptcha.net",
        ),
        "frame-ancestors": (
            "'self'",
            "https://www.google.com",
        ),
    }
}
TYPE = os.getenv('type')
PRIVATE_KEY_ID = os.getenv('private_key_id')
PRIVATE_KEY = os.getenv('private_key')
CLIENT_EMAIL = os.getenv('client_email')
CLIENT_ID = os.getenv('client_id')
AUTH_URI = os.getenv('auth_uri')
TOKEN_URI = os.getenv('token_uri')
AUTH_PROVIDER_X509_CERT_URL = os.getenv('auth_provider_x509_cert_url')
CLIENT_X509_CERT_URL = os.getenv('client_x509_cert_url')
UNIVERSE_DOMAIN = os.getenv('universe_domain')